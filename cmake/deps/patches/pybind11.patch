/*
   pybind11/detail/type_caster_base.h (originally first part of pybind11/cast.h)
   Copyright (c) 2016 Wenzel Jakob <wenzel.jakob@epfl.ch>
   All rights reserved. Use of this source code is governed by a
   BSD-style license that can be found in the
   LICENSE file https://github.com/pybind/pybind11/blob/master/LICENSE.
*/
# SPDX-FileCopyrightText: Copyright (c) 2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

diff --git a/include/pybind11/detail/type_caster_base.h b/include/pybind11/detail/type_caster_base.h
index f804d9d..a579a7f 100644
--- a/include/pybind11/detail/type_caster_base.h
+++ b/include/pybind11/detail/type_caster_base.h
@@ -25,6 +25,12 @@
 #include <utility>
 #include <vector>

+#define WITH_FIBERS
+
+#ifdef WITH_FIBERS
+#include <boost/fiber/fss.hpp>
+#endif
+
 PYBIND11_NAMESPACE_BEGIN(PYBIND11_NAMESPACE)
 PYBIND11_NAMESPACE_BEGIN(detail)

@@ -35,7 +41,20 @@ private:
     loader_life_support* parent = nullptr;
     std::unordered_set<PyObject *> keep_alive;

-#if defined(WITH_THREAD)
+#if defined(WITH_FIBERS)
+    // Store stack pointer in thread-local storage.
+    static boost::fibers::fiber_specific_ptr<loader_life_support>& get_stack_tls_key() {
+        static boost::fibers::fiber_specific_ptr<loader_life_support> fiber_stack([](loader_life_support* x){});
+        return fiber_stack;
+    }
+    static loader_life_support *get_stack_top() {
+        return get_stack_tls_key().get();
+    }
+    static void set_stack_top(loader_life_support *value) {
+        get_stack_tls_key().reset(value);
+    }
+
+#elif defined(WITH_THREAD)
     // Store stack pointer in thread-local storage.
     static PYBIND11_TLS_KEY_REF get_stack_tls_key() {
 #    if PYBIND11_INTERNALS_VERSION == 4
